@name Realistic Fans ES44
@inputs Loco:wirelink On1 Throttle Reverser DynamicBrakingPower EngineSpeed1
@outputs Temperature IdleOverride F1 F2 F3
@persist FanSpeed FanAccel Theta1 Theta2 Theta3 ThetaD1 ThetaD2 L:entity
@persist Temperature FuelSaver Tmax Horsepower AmbientLoss IdleHeat Run8Heat Fans FanHeat F1_On F1_Off F2_On F2_Off F3_On F3_Off F1 F2 F3 Speed1 Speed2 Speed3 SpeedD
@trigger 

if(first()|dupefinished()){
    
    FuelSaver = 1
    Fans = 1
    Horsepower = 4000
    AmbientLoss = 0
    
    F1_On = 50
    F1_Off = 25

    #FanSpeed = 360*4
    FanAccel = 8

    IdleHeat = Horsepower/4600
    Run8Heat = IdleHeat*5.5
    
    Tmax = 100
    Temperature = 0
    F1 = F2 = F3 = 0
    Speed1 = Speed2 = Speed3 = 0
    
    L = Loco:entity()
    
    #Radiatior Fans
    
    Theta1 = randint(1,361)-1
    holoCreate(1,L:toWorld(vec(0,-282,93)),vec(6,6,1),L:toWorld(ang(0,0,180)):rotateAroundAxis(L:up(),-Theta1),vec(255),"plane")
    holoParent(1,L)
    holoMaterial(1,"models/proppertextures/fan_generic")
    
    Theta2 = randint(1,361)-1
    holoCreate(2,L:toWorld(vec(0,-193.2,122)),vec(2.4,2.4,1),L:toWorld(ang(0,0,0)):rotateAroundAxis(L:up(),-Theta2),vec(255),"plane")
    holoParent(2,L)
    holoMaterial(2,"models/proppertextures/fan_generic")    
    
    Theta3 = randint(1,361)-1
    holoCreate(3,L:toWorld(vec(0,-163.3,122)),vec(2.4,2.4,1),L:toWorld(ang(0,0,0)):rotateAroundAxis(L:up(),-Theta3),vec(255),"plane")
    holoParent(3,L)
    holoMaterial(3,"models/proppertextures/fan_generic")    
    #Dynamic Brake Fans
    
    #[ThetaD1 = randint(1,361)-1
    holoCreate(4,L:toWorld(vec(15,0,136)),vec(4,4,1),L:angles():rotateAroundAxis(L:up(),-ThetaD1),vec(255),"plane")
    holoParent(4,L)
    holoMaterial(4,"models/proppertextures/fan_generic")
    
    ThetaD2 = randint(1,361)-1
    holoCreate(5,L:toWorld(vec(72,0,136)),vec(4,4,1),L:angles():rotateAroundAxis(L:up(),-ThetaD2),vec(255),"plane")
    holoParent(5,L)
    holoMaterial(5,"models/proppertextures/fan_generic")]#
    
}



if(clk("clk")){
    #Temperature Simulation and Fan Switches
    if(On1){
        local HeatAdded = IdleHeat + (abs(Reverser) ? 1 : 0.5)*Run8Heat*(Throttle)/100
        local HeatRemoved = 3.25*(IdleHeat)*(F1 + F2 + F3)/(Fans) + AmbientLoss
        
        Temperature += (HeatAdded - HeatRemoved)/50
        Temperature = clamp(Temperature,0,Tmax)
        
        if(!F1){
            F1 = 1
            holoEntity(1):soundPlay(1,0,"lazpack/misc/ge_radfan_dash8_loop.wav")
        }
        
        FanSpeed = 250+EngineSpeed1*(750/8)
        
               if(!F2){
            F2 = 2
            holoEntity(2):soundPlay(2,0,"gsgtrainsounds/misc/delco_qfan_2_loop.wav")
            soundVolume(2,0.25)
    }
       if(!F3){
            F3 = 3
            holoEntity(3):soundPlay(3,0,"gsgtrainsounds/misc/delco_qfan_2_loop.wav")
            soundVolume(3,0.25)
        }
    }else{
        if(F1){
            holoEntity(1):soundPlay(1,2,"")
            soundPitch(1,70)
            soundVolume(1,0.6)
            F1 = 0
        }
        if(F2){
            holoEntity(2):soundPlay(4,0,"")
            soundVolume(2,0.0)
            soundStop(2)
        }
        F2 = 0
        if(F3){
            holoEntity(3):soundPlay(6,0,"")
            soundVolume(3,0.0)
            soundStop(3)
        }
        F3 = 0
    }
    
    #Fanimations
    if(Speed1<FanSpeed){
        Speed1 += FanAccel
        if(Speed1>FanSpeed){Speed1=FanSpeed}
    }elseif(Speed1>FanSpeed){
        Speed1 += -FanAccel
        if(Speed1<FanSpeed){Speed1=FanSpeed}
    }
    
    if(Speed1>0){
        Theta1 += Speed1/10
        if(Theta1>360){Theta1 += -360}
        holoAng(1,L:toWorld(ang(0,0,180)):rotateAroundAxis(L:up(),-Theta1))
    }
    
    soundPitch(1,70+(Speed1-250)*(170/2000))
    soundVolume(1,0.4+(Speed1-250)*(0.6/2000))
    
    if(F2 & (On1<15)){
        On1 += FanAccel
        if(On1>FanSpeed){On1=FanSpeed}
    }elseif(!F2 & (On1>5)){
        On1 += -FanAccel
        if(On1<5){On1=5}
    }
    
    if(On1>5){
        Theta2 += On1/0.27
        if(Theta2>360){Theta2 += -360}
        holoAng(2,L:toWorld(ang(0,0,0)):rotateAroundAxis(L:up(),-Theta2))
    }
    
    if(F3 & (On1<15)){
        On1 += FanAccel
        if(On1>FanSpeed){On1=FanSpeed}
    }elseif(!F3 & (On1>5)){
        On1 += -FanAccel
        if(On1<5){On1=5}
    }
    
    if(On1>5){
        Theta3 += On1/0.55
        if(Theta3>360){Theta3 += -360}
        holoAng(3,L:angles():rotateAroundAxis(L:up(),-Theta3))
    }
    
    if((DynamicBrakingPower>0) & (SpeedD<FanSpeed)){
        SpeedD += FanAccel
        if(SpeedD>FanSpeed){SpeedD=FanSpeed}
    }elseif((DynamicBrakingPower==0) & (SpeedD>0)){
        SpeedD += -FanAccel
        if(SpeedD<0){SpeedD=0}
    }
    
    if(SpeedD>0){
        ThetaD1 += SpeedD/10
        ThetaD2 += SpeedD/10
        if(ThetaD1>360){ThetaD1 += -360}
        if(ThetaD2>360){ThetaD2 += -360}
        holoAng(4,L:angles():rotateAroundAxis(L:up(),-ThetaD1))
        holoAng(5,L:angles():rotateAroundAxis(L:up(),-ThetaD2))
    }

}
if(On1){
    timer("clk",100)
}

if(Temperature >= 80){
    IdleOverride = 1
}elseif(Temperature <= 40){
    IdleOverride = 0
}
